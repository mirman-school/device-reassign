#!/usr/bin/ruby
require "pathname"
require "fileutils"
require "shellwords"

WIFI_INT = "en0"
USERS_DIR = Pathname.new("/Users")
IGNORE_USERS = ["electron","Shared"]

new_username = ARGV.shift
new_fullname = ARGV.shift
new_password = ARGV.shift
new_client_identifier = ARGV.shift

def print_usage()
	puts "Usage:\n device-reassign [NEW_USER] [FULLNAME] [PASSWORD] [CLIENTIDENTIFIER}"
end

if new_username == nil || new_fullname == nil || new_password == nil || new_client_identifier == nil
	print_usage()
	exit 
end

users = Array.new
USERS_DIR.each_child do |d|
	username = d.basename.to_s
	next if IGNORE_USERS.include? username
	users.push d	
end

puts "Found the following user home folders:"
puts users
print "Delete users (y/n)?"

confirm = gets.chomp!

if confirm.downcase == "y"
	puts "Okay!"
	users.each do |u|
		user = u.basename
		puts "Deleting user #{user}"
		`dscl . -delete /Users/#{user}`
		puts "Deleting home folder for #{user}"
		FileUtils.rm_rf u
	end
else 
	puts "Skipping user deletion, for some reason..."
end

puts "Making new user #{new_username}"
puts "aka #{new_fullname}" 
puts "password #{new_password}"
puts "ClientIdentifier #{new_client_identifier}"

print "Good to go (y/n)?"
confirm = gets.chomp!

if confirm.downcase == "y"
	prng = Random.new
	uid = prng.rand(500..800)
	`dscl . create /Users/#{new_username}`
	`dscl . create /Users/#{new_username} UserShell /bin/bash`
	`dscl . create /Users/#{new_username} RealName "#{new_fullname}"`
	`dscl . create /Users/#{new_username} UniqueID #{uid}`
	`dscl . create /Users/#{new_username} PrimaryGroupID 1000`
	`dscl . create /Users/#{new_username} NFSHomeDirectory /Users/#{new_username}`
	`dscl . passwd /Users/#{new_username} #{new_password}`
	`dscl . append /Groups/_lpadmin GroupMembership #{new_username}`
	`scutil --set HostName #{new_username}`
	`scutil --set LocalHostName #{new_username}`
	`scutil --set ComputerName #{new_username}`
	`defaults write /Library/Preferences/ManagedInstalls ClientIdentifier #{new_client_identifier}`
	
	# Remove configure-dock receipt, forcing a reinstall for new user
	`pkgutil --forget org.mirman.pkg.configure-dock-install`
	puts "Device reprovisioned; update in all inventories"
else 
	puts "Fine, be that way"
	exit 
end

puts "Change Wi-FI SSID? (y/n)"
confirm = gets.chomp!

if confirm.downcase == "y"
	puts "Enter new Wi-FI SSID:"
	ssid = gets.chomp!
	puts "Enter Wi-FI password:"
	psk = gets.chomp!
	`networksetup -setairportpower #{WIFI_INT} off`
	`networksetup -removeallpreferredwirelessnetworks #{WIFI_INT}`
	`networksetup -addpreferredwirelessnetworkatindex #{WIFI_INT} "#{ssid}" 0 wpa2 #{psk}`
	`networksetup -setairportpower #{WIFI_INT} on`
end
puts "Okay, all set!"
exit